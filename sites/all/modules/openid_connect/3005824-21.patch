diff --git a/includes/openid_connect.admin.inc b/includes/openid_connect.admin.inc
index a848463..3a010bf 100644
--- a/includes/openid_connect.admin.inc
+++ b/includes/openid_connect.admin.inc
@@ -55,6 +55,16 @@ function openid_connect_admin_form($form, &$form_state) {
     );
   }
 
+  $form['openid_connect_connect_existing_users'] = array(
+    '#title' => t('Automatically connect existing users'),
+    '#description' => t('If disabled, authentication will fail for existing email addresses.'),
+    '#type' => 'checkbox',
+    // This is FALSE to reflect the default behaviour of historical installs.
+    // Given the install base there is a high likelyhood that existing sites
+    // are using the module as the single account creation process.
+    '#default_value' => variable_get('openid_connect_connect_existing_users', FALSE),
+  );
+
   $form['userinfo_mapping'] = array(
     '#title' => t('User claims mapping'),
     '#type' => 'fieldset',
@@ -149,6 +159,7 @@ function openid_connect_admin_form_submit($form, &$form_state) {
   $default_enabled = array(
     'openid_connect_always_save_userinfo',
     'openid_connect_user_pictures',
+    'openid_connect_connect_existing_users',
   );
   foreach ($default_enabled as $variable) {
     if (isset($form_state['values'][$variable])) {
diff --git a/openid_connect.module b/openid_connect.module
index 9061c48..a446340 100644
--- a/openid_connect.module
+++ b/openid_connect.module
@@ -804,6 +804,13 @@ function openid_connect_complete_authorization($client, $tokens, &$destination)
     return FALSE;
   }
 
+  // Check whether the e-mail address is valid.
+  if (!filter_var($userinfo['email'], FILTER_VALIDATE_EMAIL)) {
+    drupal_set_message(t('The e-mail address %mail is not valid.', array('%mail' => $userinfo['email'])), 'error');
+
+    return FALSE;
+  }
+
   $account = openid_connect_user_load_by_sub($sub, $client->getName());
   $results = module_invoke_all('openid_connect_pre_authorize', $tokens, $account, $userinfo, $client->getName());
 
@@ -820,20 +827,19 @@ function openid_connect_complete_authorization($client, $tokens, &$destination)
     }
     $account_is_new = FALSE;
   }
-  else {
-    // Check whether the e-mail address is valid.
-    if (!filter_var($userinfo['email'], FILTER_VALIDATE_EMAIL)) {
-      drupal_set_message(t('The e-mail address %mail is not valid.', array('%mail' => $userinfo['email'])), 'error');
-
-      return FALSE;
-    }
+  elseif ($account = user_load_by_mail($userinfo['email'])) {
     // Check whether there is an e-mail address conflict.
-    if (user_load_by_mail($userinfo['email'])) {
+    if (variable_get('openid_connect_connect_existing_users', FALSE)) {
+      openid_connect_connect_account($account, $client->getName(), $sub);
+      $account_is_new = FALSE;
+    }
+    else {
       drupal_set_message(t('The e-mail address %email is already taken.', array('%email' => $userinfo['email'])), 'error');
 
       return FALSE;
     }
-
+  }
+  else {
     // Create a new account.
     $account = openid_connect_create_user($sub, $userinfo, $client->getName());
     // Reload $account in case it has been altered in a user hook elsewhere.
